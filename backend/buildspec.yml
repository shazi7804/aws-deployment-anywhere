version: 0.2
phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - aws --version
      - aws sts get-caller-identity
      # Install azure-cli
      - pip3 install azure-cli
      - az version
      # Install kubectl with version 1.21 & Azure credential
      - curl -LO https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl
      - chmod +x kubectl && mv ./kubectl /usr/local/bin/kubectl
      - aws s3 cp s3://aws-deployment-anywhere-store-us-east-1-381354187112/kubeconfig ~/.kube/config # The Azure service principal is access AKS best practice. (https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli)
      # - az aks get-credentials --resource-group myResourceGroup --name myAKSCluster
      - kubectl version
  build:
    commands:
      - aws ecr-public get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin public.ecr.aws
      - echo Build started on `date`
      - echo Building the Docker image...··········
      - docker build -t localimage:latest image/.
      - docker tag localimage:latest ${IMAGE_URI}:latest
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - docker push $IMAGE_URI
  post_build:
    commands:
      - kubectl get no
      - kubectl apply -f aks-deployment.yaml
artifacts:
  files:
    - '**/*'
  name: aws-deployment-anywhere-${CODEBUILD_BUILD_NUMBER}-${CODEBUILD_SOURCE_VERSION}